nav#navigation.container
  .navbar.yamm.navbar-inverse.navbar-fixed-top
    h2#navigation_title.sr-only tabindex="-1" = t '.navigation'

    .container
      .navbar-header
        // Place brand before the "Toggle navigation" button to have an intuitive the focus order (on the Bootstrap examples page it's after the button which seems unintuitive)
        // TODO: Replace with logo! Or add some sr-only text like "(back to home page)"!
        = link_to root_path, class: home_link_class, id: 'logo' do
          = t('.home')
          span.sr-only =< t('.go_to_home_page')

        button#toggle_navigation.navbar-toggle.collapsed aria-controls="bs-navbar" aria-expanded="false" data-target="#bs-navbar" data-toggle="collapse" type="button"
          span.menu-text = t '.toggle_navigation'
          span.menu-icon
            span.icon-bar
            span.icon-bar
            span.icon-bar

      #bs-navbar.navbar-collapse.collapse aria-expanded="false"
        h3.sr-only = t '.content_navigation'

        = semantic_navigation :content_navigation do |navigation|
          - navigation.group User.model_name.human(count: 2), class: active_if_controller?(:users) do
            - navigation.item t('resources.list', resource: User.model_name.human(count: 2)), users_path
            - navigation.item t('resources.create', resource: User.model_name.human), new_user_path if user_signed_in? && can?(:create, User)

          - Page.roots.each do |page|
            - navigation.group page.navigation_title_or_title do
              - navigation.item t('.overview'), page_path(page), class: (:active if request.path =~ /^#{page_path(page)}/)
              li.divider role="decoration"

              - page.children.each do |child|
                - navigation.item navigation_title(child), page_path(child), class: (:active if request.path =~ /^#{page_path(child)}/)

        h3.sr-only = t '.meta_navigation'

        = semantic_navigation :meta_navigation, class: 'navbar-right' do |navigation|
          - if user_signed_in?
            - if current_user.has_role? :admin
              - navigation.group t('.admin') do
                - if can? :create, Page
                  - navigation.item "#{icon :bars, type: :fa} #{t 'actions.resources_list', resources: Page.model_name.human(count: :other)}", pages_path
                  - navigation.item "#{icon :plus, type: :fa} #{t 'actions.new_resource', resource: Page.model_name.human}", new_page_path

                - if can? :access, :rails_admin
                  li.divider role="presentation"

                  li = link_to rails_admin_path(locale: :en) do
                    = icon(:gears, type: :fa)
                    =< t('.admin')

            - navigation.group user_avatar(t('.user_menu')) do
              - navigation.item "#{icon :user, type: :fa} #{t '.show_account'}", user_registration_path
              - navigation.item "#{icon :edit, type: :fa} #{t '.edit_account'}", edit_user_registration_path

              li
                = link_to destroy_user_session_path, method: :delete do
                  = icon('sign-out', type: :fa)
                  =< t('.log_out')

          - else
            - navigation.item "<span class='visible-sm-inline-block'>#{icon 'user-plus', type: :fa}</span> <span class='hidden-sm'>#{t '.sign_up'}</span>", new_user_registration_path

            - navigation.group "<span class='visible-sm-inline-block'>#{icon 'sign-in', type: :fa}</span> <span class='hidden-sm'>#{t '.sign_in'}</span>", id: :sign_in_panel do
              li
                .yamm-content
                  .row = render 'devise/sessions/form', resource: User.new, display: :small

          - navigation.group flag(current_locale_flag, t('.choose_language')), id: :language_chooser do
            li lang="en" = link_to locale: 'en' do
              => flag(:gb)
              | Show page in english

            li lang="de" = link_to locale: 'de' do
              => flag(:de)
              | Seite auf Deutsch anzeigen

  #breadcrumbs.breadcrumb
    h3 #{t '.you_are_here'}:
    ol.breadcrumb
      li = link_to t('app.acronym'), root_path
      = render_breadcrumbs tag: :li, separator: ''
      li = truncate @last_breadcrumb || headline, length: 30, separator: ' '
