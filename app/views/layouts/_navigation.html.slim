nav#navigation.container
  .navbar.yamm.navbar-inverse.navbar-fixed-top
    h2#navigation_title.sr-only = t '.navigation'

    .container
      .navbar-header
        // Place brand before the "Toggle navigation" button to have an intuitive focus order (on the Bootstrap examples page it's after the button which seems unintuitive)
        // TODO: Replace with logo! Or add some sr-only text like "(back to home page)"!
        = link_to root_path, class: home_link_class, id: 'logo' do
          = t('.home')
          span.sr-only =< t('.go_to_home_page')

        button#toggle_navigation.navbar-toggle.collapsed aria-controls="bs-navbar" aria-expanded="false" data-target="#navbar" data-toggle="collapse" type="button"
          span.menu-text = t '.toggle_navigation'
          span.menu-icon
            span.icon-bar
            span.icon-bar
            span.icon-bar

      #navbar.navbar-collapse.collapse aria-expanded="false"
        h3.sr-only = t '.content_navigation'

        ul#content_navigation.nav.navbar-nav
          - @pages.select { | page | page.level == 0 }.each do |page|
            - if (children = page.children).any?
              = navigation_group page.navigation_title_or_title, page_path(page) do
                - page.children.each do |child|
                  = navigation_item child.navigation_title_or_title, page_path(child)
            - else
              = navigation_item page.navigation_title_or_title, page_path(page)

        h3.sr-only = t '.meta_navigation'

        ul#meta_navigation.navbar-right.nav.navbar-nav
          - if can? :crud, Page
            = navigation_group Page.model_name.human(count: :other), pages_path, "#{icon :bars, type: :fa} #{t 'actions.resources_list', resources: Page.model_name.human(count: :other)}" do
              = navigation_item "#{icon :plus, type: :fa} #{t 'actions.new_resource', resource: Page.model_name.human}", new_page_path

          - if can? :crud, User
            = navigation_group User.model_name.human(count: :other), users_path, "#{icon :bars, type: :fa} #{t 'actions.resources_list', resources: User.model_name.human(count: :other)}" do
              = navigation_item "#{icon :plus, type: :fa} #{t 'actions.new_resource', resource: User.model_name.human}", new_user_path

          - if user_signed_in?
            = navigation_group user_avatar(t('.user_menu')), user_registration_path, "#{icon :user, type: :fa} #{t '.show_account'}" do
              = navigation_item "#{icon :edit, type: :fa} #{t '.edit_account'}", edit_user_registration_path

              li
                = link_to destroy_user_session_path, method: :delete do
                  = icon('sign-out', type: :fa)
                  =< t('.log_out')

              - if can? :access, :rails_admin
                li.divider role="presentation"

                li = link_to rails_admin_path(locale: :en) do
                  = icon(:gears, type: :fa)
                  =< t('.admin')

          - else
            - navigation_item "<span class='visible-sm-inline-block'>#{icon 'user-plus', type: :fa}</span> <span class='hidden-sm'>#{t '.sign_up'}</span>", new_user_registration_path

            - navigation_group "<span class='visible-sm-inline-block'>#{icon 'sign-in', type: :fa}</span> <span class='hidden-sm'>#{t '.sign_in'}</span>", id: :sign_in_panel do
              li
                .yamm-content
                  .row = render 'devise/sessions/form', resource: User.new, display: :small

          li#language_chooser.dropdown
            = link_to flag(current_locale_flag, t('.choose_language')), '#', class: 'dropdown-toggle', 'data-toggle': 'dropdown', 'aria-expanded': false

            ul.dropdown-menu
              li lang="en"
                = link_to locale: 'en' do
                  => flag(:gb)
                  | Show page in english

              li lang="de"
                = link_to locale: 'de' do
                  => flag(:de)
                  | Seite auf Deutsch anzeigen

  #breadcrumbs.breadcrumb
    h3 #{t '.you_are_here'}:

    ol.breadcrumb
      li = link_to t('app.acronym'), root_path
      = render_breadcrumbs
